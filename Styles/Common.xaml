<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Color x:Key="LightHighlight">LightSkyBlue</Color>
	<Color x:Key="DarkHighlight">DodgerBlue</Color>
	<Style TargetType="Control">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"></Setter>
	</Style>
	<Style TargetType="TextBlock">
		<Setter Property="Margin" Value="4" />
	</Style>
	<Style TargetType="TextBox">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
	</Style>
	<Style TargetType="Button">
		<Setter Property="Cursor" Value="Hand"></Setter>
		<Setter Property="Margin" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" BorderThickness="1" Background="Transparent" BorderBrush="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TextHighlight" TargetType="Button">
		<Setter Property="Cursor" Value="Hand"></Setter>
		<Setter Property="Margin" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Border" BorderThickness="0" Background="Transparent" BorderBrush="Transparent">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ButtonBase}">
		<Setter Property="Background" Value="Transparent"></Setter>
	</Style>
	<Style TargetType="ToolBar">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="OverflowMode" Value="Never"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<ToolBarPanel IsItemsHost="True" Background="Transparent"></ToolBarPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="ToolBarTray">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="IsLocked" Value="True"></Setter>
	</Style>
	<Style TargetType="ProgressBar">
		<Setter Property="Height" Value="20" />
		<Setter Property="Margin" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Border BorderThickness="0" Height="20" Padding="1" CornerRadius="4">
						<Grid x:Name="PART_Track">
							<Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" RadiusX="5" RadiusY="5">
								<Rectangle.Fill>
									<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
										<GradientStop Color="{StaticResource LightHighlight}" Offset="0" />
										<GradientStop Color="{StaticResource DarkHighlight}" Offset="1.0" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>